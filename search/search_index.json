{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Welcome to IT4U PowerShell Course \u00b6 Intro \u00b6 PowerShell is \"a task automation and configuration management framework from Microsoft, consisting of a command-line shell and associated scripting language\" . It is the easiest way to perform mass Windows Administrator actions, if you know where to look. The PowerShell Docs by Microsoft This site will be updated weekly as new course material is written / added. If you want to see the source code for this go to the Github link in the upper right hand corner.","title":"Home"},{"location":"index.html#welcome-to-it4u-powershell-course","text":"","title":"Welcome to IT4U PowerShell Course"},{"location":"index.html#intro","text":"PowerShell is \"a task automation and configuration management framework from Microsoft, consisting of a command-line shell and associated scripting language\" . It is the easiest way to perform mass Windows Administrator actions, if you know where to look. The PowerShell Docs by Microsoft This site will be updated weekly as new course material is written / added. If you want to see the source code for this go to the Github link in the upper right hand corner.","title":"Intro"},{"location":"intro.html","text":"Day 1 \u00b6 Environment Setup \u00b6 The first thing any good SysAdmin / Programmer does is setup their development environment. First we are going to make sure that we know how to start and run PowerShell Press the Win key, then type PowerShell , then hit Enter , this opens a new non-elevated PowerShell instance You may see there are some versions of PowerShell and PowerShell ISE ending with (x86) , these are 32-bit versions of PowerShell If you open a new PowerShell window, but this time right-click and select Run as Administrator , you will open a new PowerShell window with elevated permissions Notice the prompt ends in system32 , this is a good indicator that the current window was launched as Admin Windows comes with a simple PowerShell editor, called PowerShell ISE (Integrated Scripting Environment), open Windows PowerShell ISE ISE Goodness The ISE is a great tool to use. Shipped with every install of PowerShell, it includes syntax highlighting, intellisense, debugging, command search and so much more. A better IDE is VSCode with the PowerShell extension. Let me know if you want me to walk you through this install. Getting used to using the PowerShell CLI \u00b6 Command Aliases \u00b6 If you come from a Linux / Mac background, the PowerShell CLI will be very familiar. Many Bash commands are also aliased to their PowerShell counterpart ex. Bash 1 2 3 cd # change directory pwd # print working directory ls # list PowerShell 1 2 3 Set-Location Get-Locaton Get-ChildItem View Aliases 1 2 Get-Alias # To view all alias' Get-Alias \"command\" # To view the alias of a command, ex. Get-Alias rmdir Getting Help \u00b6 Like every other shell, PowerShell has an integrated helpfile system. Searching by Name 1 Get-Help * file * Retrieving by Name 1 Get-Help Get-FileHash With Examples 1 Get-Help Get-FileHash -Examples Navigating the File System \u00b6 The first thing you should master using any CLI is how to navigate directories. This transfers over to every other shell seamlessly. The only difference is that Windows uses \\ during navigation and Linux/Mac use / during navigation. First, navigate to your Window partition's root folder. Hint You will have to use a combination of cd / Set-Location and ls / Get-ChildItem Your prompt should now look like this: PS C:\\> Navigate back to your user folder, so that your prompt returns back to PS C:\\Users\\Username> Now navigate to your Desktop , -> PS C:\\Users\\Username\\Desktop> View the contents of your desktop using ls or Get-ChildItem Finally navigate back to your home folder using cd .. In PowerShell as well as Bash, . when utilized in a path argument refers to the current directory, and .. refers to the current parent directory. Fastest Route To accomplish the above using the least amount of typing, the commands are: 1 2 3 4 cd \\ cd $home cd .\\ Desktop cd .. The second command uses one of the preset PowerShell variables, $home which returns the home directory of the current logged in user.","title":"Week 1"},{"location":"intro.html#day-1","text":"","title":"Day 1"},{"location":"intro.html#environment-setup","text":"The first thing any good SysAdmin / Programmer does is setup their development environment. First we are going to make sure that we know how to start and run PowerShell Press the Win key, then type PowerShell , then hit Enter , this opens a new non-elevated PowerShell instance You may see there are some versions of PowerShell and PowerShell ISE ending with (x86) , these are 32-bit versions of PowerShell If you open a new PowerShell window, but this time right-click and select Run as Administrator , you will open a new PowerShell window with elevated permissions Notice the prompt ends in system32 , this is a good indicator that the current window was launched as Admin Windows comes with a simple PowerShell editor, called PowerShell ISE (Integrated Scripting Environment), open Windows PowerShell ISE ISE Goodness The ISE is a great tool to use. Shipped with every install of PowerShell, it includes syntax highlighting, intellisense, debugging, command search and so much more. A better IDE is VSCode with the PowerShell extension. Let me know if you want me to walk you through this install.","title":"Environment Setup"},{"location":"intro.html#getting-used-to-using-the-powershell-cli","text":"","title":"Getting used to using the PowerShell CLI"},{"location":"intro.html#command-aliases","text":"If you come from a Linux / Mac background, the PowerShell CLI will be very familiar. Many Bash commands are also aliased to their PowerShell counterpart ex. Bash 1 2 3 cd # change directory pwd # print working directory ls # list PowerShell 1 2 3 Set-Location Get-Locaton Get-ChildItem View Aliases 1 2 Get-Alias # To view all alias' Get-Alias \"command\" # To view the alias of a command, ex. Get-Alias rmdir","title":"Command Aliases"},{"location":"intro.html#getting-help","text":"Like every other shell, PowerShell has an integrated helpfile system. Searching by Name 1 Get-Help * file * Retrieving by Name 1 Get-Help Get-FileHash With Examples 1 Get-Help Get-FileHash -Examples","title":"Getting Help"},{"location":"intro.html#navigating-the-file-system","text":"The first thing you should master using any CLI is how to navigate directories. This transfers over to every other shell seamlessly. The only difference is that Windows uses \\ during navigation and Linux/Mac use / during navigation. First, navigate to your Window partition's root folder. Hint You will have to use a combination of cd / Set-Location and ls / Get-ChildItem Your prompt should now look like this: PS C:\\> Navigate back to your user folder, so that your prompt returns back to PS C:\\Users\\Username> Now navigate to your Desktop , -> PS C:\\Users\\Username\\Desktop> View the contents of your desktop using ls or Get-ChildItem Finally navigate back to your home folder using cd .. In PowerShell as well as Bash, . when utilized in a path argument refers to the current directory, and .. refers to the current parent directory. Fastest Route To accomplish the above using the least amount of typing, the commands are: 1 2 3 4 cd \\ cd $home cd .\\ Desktop cd .. The second command uses one of the preset PowerShell variables, $home which returns the home directory of the current logged in user.","title":"Navigating the File System"}]}